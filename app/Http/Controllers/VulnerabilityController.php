<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreVulnerabilityRequest;
use App\Http\Requests\UpdateVulnerabilityRequest;
use App\Http\Resources\VulnerabilityResource;
use App\Models\Vulnerability;
use Illuminate\Http\Request;

class VulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Resources\Json\AnonymousResourceCollection
     */
    public function index(){

        return VulnerabilityResource::collection(Vulnerability::all());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     *
     * @return VulnerabilityResource
     */
    public function store(UpdateVulnerabilityRequest $request)
    {
        $data = $request->safe()->only('title','description');
        $vulnerability = Vulnerability::create($data);

        return (new VulnerabilityResource($vulnerability));
    }

    /**
     * Display the specified resource.
     *
     * @param  Vulnerability  $vulnerability
     *
     * @return VulnerabilityResource
     */
    public function show(Vulnerability $vulnerability)
    {
        return (new VulnerabilityResource($vulnerability));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  Vulnerability  $vulnerability
     *
     * @return VulnerabilityResource
     */
    public function update(UpdateVulnerabilityRequest $request,Vulnerability $vulnerability)
    {
        $data = $request->safe()->only('title','description');
        $vulnerability->update($data);

        return (new VulnerabilityResource($vulnerability));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();

        return response()->json(['message'=>'Successfully Deleted']);
    }
}
